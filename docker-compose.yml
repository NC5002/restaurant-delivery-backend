# docker-compose.yml
version: '3.9'
services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: m4vwKInT # <-- Aquí defines la contraseña para el usuario 'root' de MySQL
      MYSQL_DATABASE: restaurant_delivery_db # <-- Asegúrate que esto coincida con 'CREATE DATABASE IF NOT EXISTS restaurant_delivery_db;' en tu SQL
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # <-- Aquí le dices a Docker que copie tu 'init.sql' al contenedor
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pm4vwKInT"] # <-- Usa la MISMA contraseña que arriba
      interval: 10s
      timeout: 5s
      retries: 5    # --- FIN NUEVA CONFIGURACIÓN ---

  eureka:
    build: ./discovery
    ports: ["8761:8761"]
    depends_on: [mysql]

  gateway:
    build: ./gateway
    ports: ["8080:8080"]
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    depends_on: [eureka]

  catalog:
    build: ./catalog
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/restaurant_delivery_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    # --- CAMBIAR depends_on para esperar el healthcheck de mysql ---
    depends_on:
      mysql:
        condition: service_healthy # Espera hasta que mysql esté "healthy"
      eureka:
        condition: service_started # Eureka solo necesita estar iniciado, no necesariamente healthy para registrarse.
    # --- FIN CAMBIO ---

  order:
    build: ./order
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/restaurant_delivery_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    # --- CAMBIAR depends_on para esperar el healthcheck de mysql ---
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_started
    # --- FIN CAMBIO ---