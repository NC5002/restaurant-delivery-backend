# docker-compose.yml
version: '3.9'
services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports: ["3306:3306"]
    volumes: ['./init.sql:/docker-entrypoint-initdb.d/init.sql']
    # --- NUEVA CONFIGURACIÓN DE HEALTHCHECK ---
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 20s # Darle tiempo inicial para que MySQL arranque
      interval: 5s
    restart: unless-stopped # Asegura que MySQL intente reiniciarse si falla
    # --- FIN NUEVA CONFIGURACIÓN ---

  eureka:
    build: ./discovery
    ports: ["8761:8761"]
    depends_on: [mysql]

  gateway:
    build: ./gateway
    ports: ["8080:8080"]
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    depends_on: [eureka]

  catalog:
    build: ./catalog
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/catalog_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    # --- CAMBIAR depends_on para esperar el healthcheck de mysql ---
    depends_on:
      mysql:
        condition: service_healthy # Espera hasta que mysql esté "healthy"
      eureka:
        condition: service_started # Eureka solo necesita estar iniciado, no necesariamente healthy para registrarse.
    # --- FIN CAMBIO ---

  order:
    build: ./order
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/order_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka
    # --- CAMBIAR depends_on para esperar el healthcheck de mysql ---
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_started
    # --- FIN CAMBIO ---