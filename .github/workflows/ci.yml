name: CI/CD para Microservicios

on:
  push:
    branches: [ "main" ]

jobs:
  build-test:
    # Esta línea asegura que se use un runner de GitHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ catalog, order, gateway, discovery ]
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Ejecutar Pruebas para el servicio ${{ matrix.service }}
        # CAMBIO: Usamos -f en lugar de --file para compatibilidad
        run: mvn -B test -f ${{ matrix.service }}/pom.xml

  build-and-push-docker-image:
    needs: build-test
    # Esta línea asegura que se use un runner de GitHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ catalog, order, gateway, discovery ]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Login a GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Construir y Publicar la imagen Docker
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest ./${{ matrix.service }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest